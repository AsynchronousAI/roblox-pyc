var self = {}

function error(text){
    print("\27[1;31merror:\27[0m "..text)
    os.exit(1)
}
/******* IMPORTS ********/
/*
#includes instead of imports
are used because this one file get
compiled into the final executable 
and because imports can get 
complicated when dealing with
CLI's.
*/

/* IMPORT DEPENDENCIES */
#include "astclass.cobalt"
#include "util.cobalt"

/* IMPORT AST GENERATORS */
#include "pyast.cobalt"
#include "cppast.cobalt"
#include "cast.cobalt"

/* IMPORT CODE GENERATORS */
#include "generator.cobalt"

/* IMPORT TEMPLATES */
#include "template.cobalt"
/************************/



/** API **/
/*
includes functions that wrap around the generators, templates, 
and parsers to provide a simple interface for the user/developer
using rpyc
*/

/* functions for parsing */
function self::ParsePython(code){
    return pyast(code)
}
function self::ParseCpp(code){
    return cppast(code)
}
function self::ParseC(code){
    return cast(code)
}

/* functions for generating code */
function self::Generate(ast){
    return generator(ast)
}

/* functions for loading template */
function self.loadTemplate(path, format){
    return template(path, format)
}

/****** INTERFACE ********/
/*
operated by the CLI
*/
if (arg){ // being run through interpreter or AOT compiler
    if (#arg != 1){
        error("Invalid number of arguments")
    }
}

return self